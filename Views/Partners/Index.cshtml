@model IEnumerable<GolfTeamApp.Models.Partner>

@{
    ViewData["Title"] = "Partners";
}

<h1>Partners</h1>

@if (User.IsInRole("Admin") || User.IsInRole("Coach"))
{
    <p>
        <a asp-action="Create" class="btn btn-primary">
            <i class="fas fa-plus"></i> Create New Partner
        </a>
    </p>
}

<table class="table table-striped">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Phone)
            </th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Phone)
                </td>
                <td>
                    <!-- Everyone can view details -->
                    <a asp-action="Details" asp-route-id="@item.PartnerId" class="btn btn-sm btn-outline-info" title="View Details">
                        <i class="fas fa-eye"></i> Details
                    </a>

                    <!-- Admin can edit any partner -->
                    @if (User.IsInRole("Admin"))
                    {
                        <a asp-action="Edit" asp-route-id="@item.PartnerId" class="btn btn-sm btn-outline-primary" title="Edit Partner">
                            <i class="fas fa-edit"></i> Edit
                        </a>

                        <a asp-action="Delete" asp-route-id="@item.PartnerId" class="btn btn-sm btn-outline-danger" title="Delete Partner"
                           onclick="return confirm('Are you sure you want to delete this partner?')">
                            <i class="fas fa-trash"></i> Delete
                        </a>
                    }

                    <!-- Partners can only edit themselves -->
                    @if (User.IsInRole("Partner") && !User.IsInRole("Admin"))
                    {
                        var userId = User.FindFirst(System.Security.Claims.ClaimTypes.NameIdentifier)?.Value;
                        var canEdit = item.UserId == userId;

                        if (canEdit)
                        {
                            <a asp-action="Edit" asp-route-id="@item.PartnerId" class="btn btn-sm btn-outline-primary" title="Edit Your Profile">
                                <i class="fas fa-edit"></i> Edit Profile
                            </a>
                        }
                    }

                    <!-- Coaches can edit partners but not delete them -->
                    @if (User.IsInRole("Coach") && !User.IsInRole("Admin"))
                    {
                        <a asp-action="Edit" asp-route-id="@item.PartnerId" class="btn btn-sm btn-outline-primary" title="Edit Partner">
                            <i class="fas fa-edit"></i> Edit
                        </a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>

@if (!Model.Any())
{
    <div class="alert alert-info" role="alert">
        <h4 class="alert-heading">No Partners Found</h4>
        @if (User.IsInRole("Partner"))
        {
            <p>You are currently the only partner in the system.</p>
        }
        else
        {
            <p>There are currently no partners in the system.</p>
            <hr>
            <p class="mb-0"><a asp-action="Create" class="btn btn-primary">Create the first partner</a></p>
        }
    </div>
}

@section Scripts {
    <!-- Font Awesome for icons (if not already included in _Layout.cshtml) -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" />
}